eclipse.preferences.version=1
problemStatement=PlayingCubes.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_51" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>PlayingCubes</string>\n  </void>\n  <void property\="contestName">\n   <string>TCO05 Round 3 - 250 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;PlayingCubes&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;\nChildren are used to playing with special cubes with letters written on the cubes&apos; faces. The goal of the game is to compose words using such cubes. If you want to compose the word &amp;quot;DOG&amp;quot;, you must find 3 cubes, one containing the letter &apos;D&apos;, one containing the letter &apos;O&apos;, and one containing the letter &apos;G&apos;, and orient them so the proper letters are facing upward.\n&lt;/p&gt;\n&lt;p&gt;\nYou are also given a String[] &lt;b&gt;words&lt;/b&gt;, each element of which contains a word that you would like to spell out using the cubes.  Return a int[] containing the 0-based indices of each of the words in &lt;b&gt;words&lt;/b&gt; that can be composed using the given cubes. Indices in the return value must be sorted in ascending order.\n&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;PlayingCubes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;composeWords&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;String[], String[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int[] composeWords(String[] cubes, String[] words)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;cubes&lt;/b&gt; will contain between 2 and 8 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;cubes&lt;/b&gt; will contain exactly 6 uppercase letters (&apos;A&apos; - &apos;Z&apos;).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;words&lt;/b&gt; will contain between 1 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;words&lt;/b&gt; will contain between 2 and 8 uppercase letters (&apos;A&apos; - &apos;Z&apos;), inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;ABCDEF&amp;quot;, &amp;quot;DEFGHI&amp;quot;, &amp;quot;OPQRST&amp;quot;, &amp;quot;ZZZZZZ&amp;quot;, &amp;quot;YYYYYY&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;CAT&amp;quot;, &amp;quot;DOG&amp;quot;, &amp;quot;PIZZA&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: {1 }&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;We can form the word &amp;quot;DOG&amp;quot; using &apos;D&apos; from the first cube, &apos;O&apos; from the third and &apos;G&apos; from the second. Note that if we had used the second cube to get &apos;D&apos; instead, we would be missing a &apos;G&apos;.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;ABCDEF&amp;quot;, &amp;quot;DEFGHI&amp;quot;, &amp;quot;OPQRST&amp;quot;, &amp;quot;MNZLSA&amp;quot;, &amp;quot;QEIOGH&amp;quot;, &amp;quot;IARJGS&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;DOG&amp;quot;, &amp;quot;CAT&amp;quot;, &amp;quot;MOUSE&amp;quot;, &amp;quot;BIRD&amp;quot;, &amp;quot;CHICKEN&amp;quot;, &amp;quot;PIG&amp;quot;, &amp;quot;ANIMAL&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: {0, 1, 3, 5 }&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;AAAAAA&amp;quot;, &amp;quot;AAAAAA&amp;quot;, &amp;quot;AAAAAA&amp;quot;, &amp;quot;AAAAAA&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;AA&amp;quot;, &amp;quot;AAA&amp;quot;, &amp;quot;AAAA&amp;quot;, &amp;quot;AAAAA&amp;quot;, &amp;quot;AAAAAA&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: {0, 1, 2 }&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;ABCDEF&amp;quot;, &amp;quot;DEFGHI&amp;quot;, &amp;quot;OPQRST&amp;quot;, &amp;quot;ZZZZZZ&amp;quot;, &amp;quot;ZZZZZZ&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;CAT&amp;quot;, &amp;quot;DOG&amp;quot;, &amp;quot;PIZZA&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: {1, 2 }&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>composeWords</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>cubes</string>\n   </void>\n   <void method\="add">\n    <string>words</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.String;</class>\n   </void>\n   <void method\="add">\n    <class>[Ljava.lang.String;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>[Ljava.lang.Integer;</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="5">\n          <void index\="0">\n           <string>ABCDEF</string>\n          </void>\n          <void index\="1">\n           <string>DEFGHI</string>\n          </void>\n          <void index\="2">\n           <string>OPQRST</string>\n          </void>\n          <void index\="3">\n           <string>ZZZZZZ</string>\n          </void>\n          <void index\="4">\n           <string>YYYYYY</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.String" length\="3">\n          <void index\="0">\n           <string>CAT</string>\n          </void>\n          <void index\="1">\n           <string>DOG</string>\n          </void>\n          <void index\="2">\n           <string>PIZZA</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Integer" length\="1">\n        <void index\="0">\n         <int>1</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="6">\n          <void index\="0">\n           <string>ABCDEF</string>\n          </void>\n          <void index\="1">\n           <string>DEFGHI</string>\n          </void>\n          <void index\="2">\n           <string>OPQRST</string>\n          </void>\n          <void index\="3">\n           <string>MNZLSA</string>\n          </void>\n          <void index\="4">\n           <string>QEIOGH</string>\n          </void>\n          <void index\="5">\n           <string>IARJGS</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.String" length\="7">\n          <void index\="0">\n           <string>DOG</string>\n          </void>\n          <void index\="1">\n           <string>CAT</string>\n          </void>\n          <void index\="2">\n           <string>MOUSE</string>\n          </void>\n          <void index\="3">\n           <string>BIRD</string>\n          </void>\n          <void index\="4">\n           <string>CHICKEN</string>\n          </void>\n          <void index\="5">\n           <string>PIG</string>\n          </void>\n          <void index\="6">\n           <string>ANIMAL</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Integer" length\="4">\n        <void index\="0">\n         <int>0</int>\n        </void>\n        <void index\="1">\n         <int>1</int>\n        </void>\n        <void index\="2">\n         <int>3</int>\n        </void>\n        <void index\="3">\n         <int>5</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="4">\n          <void index\="0">\n           <string>AAAAAA</string>\n          </void>\n          <void index\="1">\n           <string>AAAAAA</string>\n          </void>\n          <void index\="2">\n           <string>AAAAAA</string>\n          </void>\n          <void index\="3">\n           <string>AAAAAA</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.String" length\="5">\n          <void index\="0">\n           <string>AA</string>\n          </void>\n          <void index\="1">\n           <string>AAA</string>\n          </void>\n          <void index\="2">\n           <string>AAAA</string>\n          </void>\n          <void index\="3">\n           <string>AAAAA</string>\n          </void>\n          <void index\="4">\n           <string>AAAAAA</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Integer" length\="3">\n        <void index\="0">\n         <int>0</int>\n        </void>\n        <void index\="1">\n         <int>1</int>\n        </void>\n        <void index\="2">\n         <int>2</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="5">\n          <void index\="0">\n           <string>ABCDEF</string>\n          </void>\n          <void index\="1">\n           <string>DEFGHI</string>\n          </void>\n          <void index\="2">\n           <string>OPQRST</string>\n          </void>\n          <void index\="3">\n           <string>ZZZZZZ</string>\n          </void>\n          <void index\="4">\n           <string>ZZZZZZ</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.String" length\="3">\n          <void index\="0">\n           <string>CAT</string>\n          </void>\n          <void index\="1">\n           <string>DOG</string>\n          </void>\n          <void index\="2">\n           <string>PIZZA</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Integer" length\="2">\n        <void index\="0">\n         <int>1</int>\n        </void>\n        <void index\="1">\n         <int>2</int>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
