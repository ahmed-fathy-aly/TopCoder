eclipse.preferences.version=1
problemStatement=AvoidRoads.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_51" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>AvoidRoads</string>\n  </void>\n  <void property\="contestName">\n   <string>2003 TCO Semifinals 4 - 250 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;AvoidRoads&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;i&gt;Problem contains images.  Plugin users can view them in the applet.&lt;/i&gt;&lt;br&gt;&lt;/br&gt;\nIn the city, roads are arranged in a grid pattern.  Each point on the grid represents a corner where two blocks meet.  The points are connected by line segments which represent the various street blocks.  Using the cartesian coordinate system, we can assign a pair of integers to each corner as shown below. &lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;img src\=&quot;http\://www.topcoder.com/contest/problem/AvoidRoads/AvoidPic1.GIF&quot;&gt;&lt;/img&gt;\n&lt;br&gt;&lt;/br&gt;\nYou are standing at the corner with coordinates 0,0.  Your destination is at corner &lt;b&gt;width&lt;/b&gt;,&lt;b&gt;height&lt;/b&gt;.  You will return the number of distinct paths that lead to your destination.  Each path must use exactly &lt;b&gt;width+height&lt;/b&gt; blocks.  In addition, the city has declared certain street blocks untraversable.  These blocks may not be a part of any path.  You will be given a String[] &lt;b&gt;bad&lt;/b&gt; describing which blocks are bad.  If (quotes for clarity) &amp;quot;a b c d&amp;quot; is an element of &lt;b&gt;bad&lt;/b&gt;, it means the block from corner a,b to corner c,d is untraversable.  For example, let&apos;s say &lt;pre&gt;\n&lt;b&gt;width&lt;/b&gt;  \= 6\n&lt;b&gt;length&lt;/b&gt; \= 6\n&lt;b&gt;bad&lt;/b&gt; \= {&amp;quot;0 0 0 1&amp;quot;,&amp;quot;6 6 5 6&amp;quot;}&lt;/pre&gt;\nThe picture below shows the grid, with untraversable blocks darkened in black.  A sample path has been highlighted in red.&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;img src\=&quot;http\://www.topcoder.com/contest/problem/AvoidRoads/AvoidPic2.GIF&quot;&gt;&lt;/img&gt;\n&lt;br&gt;&lt;/br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;AvoidRoads&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;numWays&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;int, int, String[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;long&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;long numWays(int width, int height, String[] bad)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;width&lt;/b&gt; will be between 1 and 100 inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;height&lt;/b&gt; will be between 1 and 100 inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;bad&lt;/b&gt; will contain between 0 and 50 elements inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;bad&lt;/b&gt; will contain between 7 and 14 characters inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of the bad will be in the format &amp;quot;a b c d&amp;quot; where, &lt;ul&gt;&lt;li&gt; a,b,c,d are integers with no extra leading zeros,&lt;/li&gt;&lt;li&gt; a and c are between 0 and &lt;b&gt;width&lt;/b&gt; inclusive,&lt;/li&gt;&lt;li&gt; b and d are between 0 and &lt;b&gt;height&lt;/b&gt; inclusive,&lt;/li&gt;&lt;li&gt;and  a,b is one block away from c,d.&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;The return value will be between 0 and 2^63-1 inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;0 0 0 1&amp;quot;,&amp;quot;6 6 5 6&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 252&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Example from above.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Four blocks aranged in a square.  Only 2 paths allowed.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;35&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;31&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 6406484391866534976&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Big number.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;0 0 1 0&amp;quot;, &amp;quot;1 2 2 2&amp;quot;, &amp;quot;1 1 2 1&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>numWays</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>width</string>\n   </void>\n   <void method\="add">\n    <string>height</string>\n   </void>\n   <void method\="add">\n    <string>bad</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>[Ljava.lang.String;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Long</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="3">\n        <void index\="0">\n         <int>6</int>\n        </void>\n        <void index\="1">\n         <int>6</int>\n        </void>\n        <void index\="2">\n         <array class\="java.lang.String" length\="2">\n          <void index\="0">\n           <string>0 0 0 1</string>\n          </void>\n          <void index\="1">\n           <string>6 6 5 6</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <long>252</long>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="3">\n        <void index\="0">\n         <int>1</int>\n        </void>\n        <void index\="1">\n         <int>1</int>\n        </void>\n        <void index\="2">\n         <array class\="java.lang.String" length\="0"/>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <long>2</long>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="3">\n        <void index\="0">\n         <int>35</int>\n        </void>\n        <void index\="1">\n         <int>31</int>\n        </void>\n        <void index\="2">\n         <array class\="java.lang.String" length\="0"/>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <long>6406484391866534976</long>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="3">\n        <void index\="0">\n         <int>2</int>\n        </void>\n        <void index\="1">\n         <int>2</int>\n        </void>\n        <void index\="2">\n         <array class\="java.lang.String" length\="3">\n          <void index\="0">\n           <string>0 0 1 0</string>\n          </void>\n          <void index\="1">\n           <string>1 2 2 2</string>\n          </void>\n          <void index\="2">\n           <string>1 1 2 1</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <long>0</long>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
