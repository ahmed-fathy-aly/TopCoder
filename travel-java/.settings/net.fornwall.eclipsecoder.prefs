eclipse.preferences.version=1
problemStatement=Travel.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_51" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>Travel</string>\n  </void>\n  <void property\="contestName">\n   <string>Inv 2002 Semi 3 - 300 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;Travel&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;\nA traveling salesman has recently decided to go international and sell his\nwares around the globe.  He has done in depth research and has come up with a\nlist of cities which he thinks will provide the best market for his goods.  In\nplanning his trip, the salesman wants to minimize the total distance he has to\ntravel because he does not particularly like traveling (which is unfortunate\nfor him, as he is a traveling salesman) and furthermore, he figures\nthe less distance he has to travel, the cheaper his trip will be.  However,\nthis salesman is not particularily good at math, and so you must write a\ncomputer program to help him find his way in the least distance.\n&lt;/p&gt;&lt;p&gt;\nYou will be given a set of cities defined by their longitudes and latitudes.\nIn addition, you will be given the radius of the planet that this traveling\nsalesman resides on.  Assume that there are direct flights, both ways, between\nevery pair of cities that the salesman wants to visit, and that the flights\nfollow the shortest path possible (over the surface of the planet).  In\naddition, the first element of the input String[] will be the city in which the\nsalesman lives, and thus his trip must start and end at this city.\n&lt;/p&gt;&lt;p&gt;\nEach city is defined by two numbers, a latitude and a longitude.  The latitude\nis the number of degrees above the equator, with 90 being the north pole, and\n-90 being the south pole.  The longitude is the number of degrees east or west\nof some arbitrary, predefined point.  Thus, 90 degrees east is one quarter of\nthe way around the globe in the eastern direction.\n&lt;/p&gt;&lt;p&gt;\nIf the result is not an integer, round it to the nearest integer (.5 rounds up)\n&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;Travel&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;shortest&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;String[], int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int shortest(String[] cities, int radius)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Notes&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Assume the planet is a perfect sphere.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;To find the cartesion coordinates of a city, assuming the center of the planet is at (0,0,0), use the following formulas\:&lt;br&gt;&lt;/br&gt;x \= r*cos(latitude)*cos(longitude)&lt;br&gt;&lt;/br&gt;y \= r*cos(latitude)*sin(longitude)&lt;br&gt;&lt;/br&gt;z \= r*sin(latitude)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;cities&lt;/b&gt; contains between 2 and 9 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;cities&lt;/b&gt; represents a unique point on the globe.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;cities&lt;/b&gt; is formatted as &amp;quot;&amp;lt;latitude&amp;gt; &amp;lt;longitude&amp;gt;&amp;quot; where &amp;lt;latitude&amp;gt; is an integer in the range -90 to 90, inclusive, and &amp;lt;longitude&amp;gt; is an integer in the range -180 to 180, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;radius&lt;/b&gt; is an integer between 1 and 1,000, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;to avoid rounding errors, the shortest path, prior to rounding, will not be within 0.001 of &amp;lt;x&amp;gt;+0.5 for any integer &amp;lt;x&amp;gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;0 0&amp;quot;,&amp;quot;0 1&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1000&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 35&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The two cities are located one degree apart at the same latitude&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;0 0&amp;quot;,&amp;quot;0 1&amp;quot;,&amp;quot;0 -1&amp;quot;,&amp;quot;-1 0&amp;quot;,&amp;quot;1 0&amp;quot;,&amp;quot;-1 -1&amp;quot;,&amp;quot;1 1&amp;quot;,&amp;quot;1 -1&amp;quot;,&amp;quot;-1 1&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;40 -82&amp;quot;,&amp;quot;-27 -59&amp;quot;,&amp;quot;-40 48&amp;quot;\n,&amp;quot;26 -12&amp;quot;,&amp;quot;-31 -37&amp;quot;,&amp;quot;-30 42&amp;quot;\n,&amp;quot;-36 -23&amp;quot;,&amp;quot;-26 71&amp;quot;,&amp;quot;-19 83&amp;quot;,&amp;quot;8 63&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;698&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 4505&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>shortest</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>cities</string>\n   </void>\n   <void method\="add">\n    <string>radius</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.String;</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Integer</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="2">\n          <void index\="0">\n           <string>0 0</string>\n          </void>\n          <void index\="1">\n           <string>0 1</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>1000</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <int>35</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="9">\n          <void index\="0">\n           <string>0 0</string>\n          </void>\n          <void index\="1">\n           <string>0 1</string>\n          </void>\n          <void index\="2">\n           <string>0 -1</string>\n          </void>\n          <void index\="3">\n           <string>-1 0</string>\n          </void>\n          <void index\="4">\n           <string>1 0</string>\n          </void>\n          <void index\="5">\n           <string>-1 -1</string>\n          </void>\n          <void index\="6">\n           <string>1 1</string>\n          </void>\n          <void index\="7">\n           <string>1 -1</string>\n          </void>\n          <void index\="8">\n           <string>-1 1</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>1</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <int>0</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="10">\n          <void index\="0">\n           <string>40 -82</string>\n          </void>\n          <void index\="1">\n           <string>-27 -59</string>\n          </void>\n          <void index\="2">\n           <string>-40 48</string>\n          </void>\n          <void index\="3">\n           <string>26 -12</string>\n          </void>\n          <void index\="4">\n           <string>-31 -37</string>\n          </void>\n          <void index\="5">\n           <string>-30 42</string>\n          </void>\n          <void index\="6">\n           <string>-36 -23</string>\n          </void>\n          <void index\="7">\n           <string>-26 71</string>\n          </void>\n          <void index\="8">\n           <string>-19 83</string>\n          </void>\n          <void index\="9">\n           <string>8 63</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <int>698</int>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <int>4505</int>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
