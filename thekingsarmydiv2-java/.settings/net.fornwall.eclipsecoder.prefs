eclipse.preferences.version=1
problemStatement=TheKingsArmyDiv2.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.8.0_77" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement" id\="ProblemStatement0">\n  <void property\="className">\n   <string>TheKingsArmyDiv2</string>\n  </void>\n  <void property\="contestName">\n   <string>SRM 643 DIV 2 - 250 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;TheKingsArmyDiv2&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;\nThe King of Byteland has an army that consists of R*C soldiers.\nHe has just arranged the soldiers into a grid with R rows and C columns.\nTwo soldiers are neighbors if they stand next to each other in a row or in a column.\n&lt;/p&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;p&gt;\nEach of the soldiers is currently either happy or sad.\nYou are given their current states in a String[] &lt;b&gt;state&lt;/b&gt; with R elements, each containing C characters.\nThe character &lt;b&gt;state&lt;/b&gt;[i][j] is either &apos;H&apos; (if the soldier in row i, column j is happy) or &apos;S&apos; (if that soldier is sad).\n&lt;/p&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;p&gt;\nHappiness is contagious.\nWhenever two neighbors are both happy, they will tell each other jokes and after a minute that will make all of their neighbors happy as well.\n&lt;/p&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;p&gt;\nHere&apos;s an example.\nThere are two happy neighbors among many sad soldiers\:\n&lt;/p&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;pre&gt;\n{&quot;SSSSS&quot;,\n &quot;SSHHS&quot;,\n &quot;SSSSS&quot;}\n&lt;/pre&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;p&gt;\nThis is the situation after one minute\: all of their neighbors are happy now.\n&lt;/p&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;pre&gt;\n{&quot;SSHHS&quot;,\n &quot;SHHHH&quot;,\n &quot;SSHHS&quot;}\n&lt;/pre&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;p&gt;\nAnd this is the situation after another minute. Now all the neighbors of the soldiers that are currently happy became happy as well.\n&lt;/p&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;pre&gt;\n{&quot;SHHHH&quot;,\n &quot;HHHHH&quot;,\n &quot;SHHHH&quot;}\n&lt;/pre&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;p&gt;\nAfter another minute, all the soldiers in the King&apos;s army would be happy.\n&lt;/p&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;p&gt;\nThe King wants all his soldiers to be happy.\nSometimes it&apos;s easy, as in the above example\: all he has to do is wait for a while and all soldiers will become happy.\nHowever, it is not always the case.\nFor example, in the situation below the happiness would not spread anywhere, each soldier would remain in his original state forever.\n(Note that a single happy soldier does not make his neighbors happy.)\n&lt;/p&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;pre&gt;\n{&quot;SSSSS&quot;,\n &quot;SSHSH&quot;,\n &quot;HSSSS&quot;}\n&lt;/pre&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;p&gt;\nThe King can make a soldier happy by giving him an award for excellent service.\nObviously, the King could make all soldiers happy by giving awards to all of them.\nBut the King is smart and knows that there is a better solution.\nHe will only give the awards to a few carefully selected soldiers and then he will simply wait until the happiness spreads to the rest of the army.\n&lt;/p&gt;\n&lt;p&gt;\n&lt;/p&gt;\n&lt;p&gt;\nYou are given the String[] &lt;b&gt;state&lt;/b&gt;.\nCompute and return the smallest number of awards the king has to give to make all soldiers happy in the end.\n&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;TheKingsArmyDiv2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;getNumber&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;String[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int getNumber(String[] state)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;256&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;state&lt;/b&gt; will contain between 3 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;state&lt;/b&gt; will contain between 3 and 50 characters, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;state&lt;/b&gt; will contain the same number of characters.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each character in each element of &lt;b&gt;state&lt;/b&gt; will be either &apos;H&apos; or &apos;S&apos;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;SSSSS&amp;quot;,\n &amp;quot;SSHHS&amp;quot;,\n &amp;quot;SSSSS&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;This is the first example in the problem statement. No awards are necessary, all soldiers will become happy anyway.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;SSSSS&amp;quot;,\n &amp;quot;SSHSH&amp;quot;,\n &amp;quot;HSSSS&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;This is the second example in the problem statement. The King needs to give at least one award. One optimal solution is to give an award to the soldier in row 1, column 3. (Both indices are 0-based.)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;SSS&amp;quot;,\n &amp;quot;SSS&amp;quot;,\n &amp;quot;SSS&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Here the King must give awards to two soldiers.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;HSHSHSH&amp;quot;, &amp;quot;SSSHSSS&amp;quot;, &amp;quot;SSHSHSS&amp;quot;, &amp;quot;SHSHSHS&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;HHSH&amp;quot;, &amp;quot;HHHS&amp;quot;, &amp;quot;HSSS&amp;quot;, &amp;quot;SHSH&amp;quot;, &amp;quot;HHHS&amp;quot;, &amp;quot;HSHH&amp;quot;, &amp;quot;SSSH&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>getNumber</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>state</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.String;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Integer</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="3">\n          <void index\="0">\n           <string>SSSSS</string>\n          </void>\n          <void index\="1">\n           <string>SSHHS</string>\n          </void>\n          <void index\="2">\n           <string>SSSSS</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <int>0</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="3">\n          <void index\="0">\n           <string>SSSSS</string>\n          </void>\n          <void index\="1">\n           <string>SSHSH</string>\n          </void>\n          <void index\="2">\n           <string>HSSSS</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <int>1</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="3">\n          <void index\="0">\n           <string>SSS</string>\n          </void>\n          <void index\="1">\n           <string>SSS</string>\n          </void>\n          <void index\="2">\n           <string>SSS</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <int>2</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="4">\n          <void index\="0">\n           <string>HSHSHSH</string>\n          </void>\n          <void index\="1">\n           <string>SSSHSSS</string>\n          </void>\n          <void index\="2">\n           <string>SSHSHSS</string>\n          </void>\n          <void index\="3">\n           <string>SHSHSHS</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <int>1</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase4">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="7">\n          <void index\="0">\n           <string>HHSH</string>\n          </void>\n          <void index\="1">\n           <string>HHHS</string>\n          </void>\n          <void index\="2">\n           <string>HSSS</string>\n          </void>\n          <void index\="3">\n           <string>SHSH</string>\n          </void>\n          <void index\="4">\n           <string>HHHS</string>\n          </void>\n          <void index\="5">\n           <string>HSHH</string>\n          </void>\n          <void index\="6">\n           <string>SSSH</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <int>0</int>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
